name: Swift CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    
    steps:
     - uses: actions/checkout@v4
      - name: Pod Install
        working-directory: ./
        run: pod install
        continue-on-error: true
        id: pod1
      - name: Trying to fix in case of failed (1)
        working-directory: ./
        continue-on-error: true
        id: pod2
        if: steps.pod1.outcome == 'failure'
        run: |
            echo "Run pod install again with repo update"
            pod install --repo-update
      - name: Trying to fix in case of failed (2)
        working-directory: ./
        continue-on-error: true
        id: pod3
        if: steps.pod2.outcome == 'failure'
        run: |
            echo "Run pod install again as x86"
            arch -x86_64 pod install
      - name: Trying to fix in case of failed (3)
        working-directory: ./
        if: steps.pod3.outcome == 'failure'
        run: |
            echo "Run pod install again as x84 with repo update"
            arch -x86_64 pod install --repo-update
      
      # Step 8: Set permissions on Derived Data (optional)
      - name: Set permissions on Derived Data
        run: sudo chmod -R 777 ~/Library/Developer/Xcode/DerivedData

      # Step 9: Clean Derived Data (optional, helps avoid cache issues)
      - name: Clean Derived Data
        run: sudo rm -rf ~/Library/Developer/Xcode/DerivedData/*

      # Step 10: Clean the project (optional)
      - name: Clean project
        run: xcodebuild clean -scheme CheckCICD

      # Step 11: Build the project
      - name: Build project
        run: |
          xcodebuild -scheme CheckCICD \
          -sdk iphonesimulator \
          -destination "platform=iOS Simulator,name=iPhone 14,OS=16.0" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          build
